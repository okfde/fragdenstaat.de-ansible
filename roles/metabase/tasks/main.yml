---

- name: Check if HTTPS certificates exist
  ansible.builtin.stat:
    path: "/etc/letsencrypt/live/{{ item }}/fullchain.pem"
  register: https_cert_check
  with_items: "{{ https_domains }}"

- name: Set HTTPS certificate facts
  ansible.builtin.set_fact:
    active_https_domains: "{{ active_https_domains | default({}) | combine({item.item: item.stat.exists}) }}"
  with_items: "{{ https_cert_check.results }}"

- name: Create metabase directory
  ansible.builtin.file:
    path: "{{ metabase_dir }}"
    state: directory
    owner: root
    mode: "0755"

- name: Set metabase docker compose
  ansible.builtin.template:
    src: docker-compose.yml.j2
    dest: "{{ metabase_dir }}/docker-compose.yml"
    mode: "0644"
  notify: restart metabase

- name: Pull latest version
  ansible.builtin.command:
    cmd: docker compose pull
    chdir: "{{ metabase_dir }}"
  changed_when: true
  notify: restart metabase

- name: Set metabase systemd service
  ansible.builtin.template:
    src: metabase.service.j2
    dest: /etc/systemd/system/metabase.service
    mode: "0444"

- name: Start metabase service
  ansible.builtin.systemd:
    name: metabase
    state: started
    daemon_reload: true

- name: Create the Nginx site configuration
  ansible.builtin.template:
    src: nginx-site.j2
    dest: "/etc/nginx/sites-available/{{ metabase_domain }}"
    mode: "0644"
    backup: true
  notify: reload nginx

- name: Ensure that the application site is enabled
  ansible.builtin.file:
    src: "/etc/nginx/sites-available/{{ metabase_domain }}"
    dest: "/etc/nginx/sites-enabled/{{ metabase_domain }}"
    state: link
  notify: reload nginx
