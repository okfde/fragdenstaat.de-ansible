---

- name: Add the PostgreSQL public GPG key to the apt repo
  ansible.builtin.apt_key:
    url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
    state: present

- name: Add PostgreSQL to the sources list
  ansible.builtin.apt_repository:
    repo: 'deb [arch=amd64] https://apt.postgresql.org/pub/repos/apt/ {{ ansible_distribution_release }}-pgdg main'
    update_cache: "{{ update_apt_cache }}"
    state: present

- name: Install PostgreSQL (20.04)
  ansible.builtin.apt:
    pkg:
      - "postgresql-{{ pg_version }}"
      - "postgresql-contrib"
      - "libpq-dev"
      - "postgis"
      - "postgresql-{{ pg_version }}-postgis-3"
      - "postgis-doc"
      - "python3-psycopg2"
    update_cache: "{{ update_apt_cache }}"
    state: present
  tags: packages
  when: ansible_distribution_version == "20.04"

- name: Install PostgreSQL (22.04)
  ansible.builtin.apt:
    pkg:
      - "postgresql-{{ pg_version }}"
      - "postgresql-contrib"
      - "libpq-dev"
      - "postgis"
      - "postgresql-{{ pg_version }}-postgis-3"
      - "postgis-doc"
      - "python3-psycopg2"
    update_cache: "{{ update_apt_cache }}"
    state: present
  tags: packages
  when: ansible_distribution_version == "22.04"


- name: Ensure the PostgreSQL service is running
  ansible.builtin.service:
    name: postgresql
    state: started
    enabled: true

- name: ensure language packages are installed
  ansible.builtin.apt:
    name:
      - language-pack-en
      - language-pack-en-base
    state: latest
    update_cache: "{{ update_apt_cache }}"
  register: locale_exists

- name: Ensure locale exists
  locale_gen: name={{ item }}
  with_items:
    - en_US.UTF-8

- name: ensure dpkg is reconfigured
  ansible.builtin.command:
    cmd: dpkg-reconfigure -f noninteractive locales
  when: locale_exists.changed
  tags:
    - skip_ansible_lint

- name: restart postgres on locale change
  ansible.builtin.service:
    name: postgresql
    state: restarted
    enabled: true
  when: locale_exists.changed
  tags:
    - skip_ansible_lint

- name: Adjust basic settings on primary/replica
  ansible.builtin.lineinfile:
    path: "/etc/postgresql/{{ pg_version }}/main/postgresql.conf"
    regex: "^(#)?{{ item.key }}"
    line: "{{ item.key }} = {{ item.value }}"
    state: present
  loop:
    - key: "max_connections"
      value: 200

- name: Adjust performance settings on primary
  ansible.builtin.lineinfile:
    path: "/etc/postgresql/{{ pg_version }}/main/postgresql.conf"
    regex: "^(#)?{{ item.key }}"
    line: "{{ item.key }} = {{ item.value }}"
    state: present
  loop:
    - key: "shared_buffers"
      value: "8GB"
    - key: "effective_cache_size"
      value: "24GB"
    - key: "maintenance_work_mem"
      value: "2GB"
    - key: "checkpoint_completion_target"
      value: 0.9
    - key: "wal_buffers"
      value: "16MB"
    - key: "default_statistics_target"
      value: 100
    - key: "random_page_cost"
      value: 1.1
    - key: "effective_io_concurrency"
      value: 200
    - key: "work_mem"
      value: "20971kB"
    - key: "min_wal_size"
      value: "1GB"
    - key: "max_wal_size"
      value: "4GB"
    - key: "max_worker_processes"
      value: 3
    - key: "max_parallel_workers_per_gather"
      value: 2"
    - key: "max_parallel_workers"
      value: 3
    - key: "max_parallel_maintenance_workers"
      value: 2
  when: inventory_hostname in groups['db']
  notify:
    - restart postgresql
