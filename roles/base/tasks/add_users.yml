---

- name: Allow passwordless sudo
  ansible.builtin.lineinfile:
    path: /etc/sudoers
    state: present
    regexp: '^%sudo   ALL='
    line: '%sudo   ALL=(ALL) NOPASSWD: ALL'
    validate: '/usr/sbin/visudo -cf %s'

- name: Add user with a bash shell and group
  ansible.builtin.user:
    name: "{{ item.name }}"
    shell: /bin/bash
    groups: sudo
    append: true
  with_items: "{{ ssh_users }}"

- name: Set authorized keys for users
  ansible.posix.authorized_key:
    user: "{{ item.0.name }}"
    state: present
    key: "{{ item.1 }}"
  loop: "{{ ssh_users | subelements('ssh_public_keys', 'skip_missing=True') }}"
  ignore_errors: true
  tags:
    - skip_ansible_lint

- name: Set testsystem indicator in .bashrc
  ansible.builtin.replace:
    path: "/home/{{ item.name }}/.bashrc"
    regexp: "PS1='\\${"
    replace: "PS1='TESTSYSTEM: ${"
  when: "'tst.okfn.de' in inventory_hostname"
  with_items: "{{ ssh_users }}"

- name: Set livesystem indicator in .bashrc
  ansible.builtin.replace:
    path: "/home/{{ item.name }}/.bashrc"
    regexp: "PS1='\\${"
    replace: "PS1='LIVESYSTEM: ${"
  when: "not 'tst.okfn.de' in inventory_hostname"
  with_items: "{{ ssh_users }}"

- name: Set testsystem indicator in .bashrc (root)
  ansible.builtin.replace:
    path: "/root/.bashrc"
    regexp: "PS1='\\${"
    replace: "PS1='TESTSYSTEM: ${"
  when: "'tst.okfn.de' in inventory_hostname"

- name: Set livesystem indicator in .bashrc (root)
  ansible.builtin.replace:
    path: "/root/.bashrc"
    regexp: "PS1='\\${"
    replace: "PS1='LIVESYSTEM: ${"
  when: "not 'tst.okfn.de' in inventory_hostname"

- name: Remove authorized keys for users
  ansible.posix.authorized_key:
    user: "{{ item.0.name }}"
    state: absent
    key: "{{ item.1 }}"
  loop: "{{ ssh_users | subelements('revoked_ssh_public_keys', 'skip_missing=True') }}"
