- name: Disable tor socks port
  ansible.builtin.lineinfile:
    path: /etc/tor/torrc
    line: "SocksPort 0"

- name: Add torrc hidden services
  ansible.builtin.blockinfile:
    path: /etc/tor/torrc
    block: |
      HiddenServiceDir /var/lib/tor/{{ service.key }}/
      HiddenServiceVersion 3
      HiddenServicePort {{ service.value.port }} 127.0.0.1:{{ service.value.internal_port }}
      HiddenServicePort 443 127.0.0.1:443

    marker: "# {mark} ANSIBLE MANAGED BLOCK Onion Service {{ service.key }}"
  with_dict: "{{ onion_services }}"
  loop_control:
    loop_var: service
  notify: restart tor

- name: Create hidden service directories
  ansible.builtin.file:
    path: "/var/lib/tor/{{ service.key }}"
    state: directory
    owner: debian-tor
    group: debian-tor
    mode: "0700"
  with_dict: "{{ onion_services }}"
  loop_control:
    loop_var: service
  notify: restart tor

- name: Write hostname
  ansible.builtin.copy:
    content: "{{ service.value.hostname }}"
    dest: "/var/lib/tor/{{ service.key }}/hostname"
    owner: debian-tor
    group: debian-tor
    mode: "0600"
  with_dict: "{{ onion_services }}"
  loop_control:
    loop_var: service
  notify: restart tor

- name: Write local system_tor AppArmor profile.
  ansible.builtin.template:
    src: apparmor_system_tor.j2
    dest: "/etc/apparmor.d/local/system_tor"
    owner: root
    group: root
    mode: "644"
  notify: restart apparmor

- name: Start tor
  ansible.builtin.service:
    name: tor
    state: started
    enabled: true

- name: Create the onion application log file
  ansible.builtin.file:
    path: "{{ application_log_dir }}/gunicorn_onion_supervisor.log"
    owner: "{{ gunicorn_user }}"
    group: "{{ gunicorn_group }}"
    mode: "0664"
    state: touch

- name: Create the onion gunicorn/uvicorn script file
  ansible.builtin.template:
    src: "{{ item }}_onion_start.j2"
    dest: "{{ virtualenv_path }}/bin/{{ item }}_onion_start"
    owner: "{{ gunicorn_user }}"
    group: "{{ gunicorn_group }}"
    mode: "0755"
    backup: true
  with_items:
    - gunicorn
    - uvicorn
  notify: restart onion app server
  tags:
    - deploy
    - deploy-backend
    - deploy-web

- name: Create the Supervisor config file
  ansible.builtin.template:
    src: "supervisor_{{ item }}.j2"
    dest: "/etc/supervisor/conf.d/{{ item }}.conf"
    mode: "0600"
    backup: true
  with_items:
    - "app_gunicorn_onion"
    - "app_uvicorn_onion"

- name: Re-read the Supervisor config files
  community.general.supervisorctl:
    name: "{{ item }}"
    state: present
  with_items:
    - "{{ application_name }}_gunicorn_onion"
    - "{{ application_name }}_uvicorn_onion"
