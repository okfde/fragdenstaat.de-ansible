---

- name: Ensure gunicorn is installed
  ansible.builtin.command: uv pip show gunicorn # this would fail if gunicorn is not installed
  environment:
    VIRTUAL_ENV: "{{ virtualenv_path }}"
  become: true
  become_user: "{{ gunicorn_user }}"
  changed_when: false

- name: Create the application log folder
  ansible.builtin.file:
    path: "{{ application_log_dir }}"
    owner: "{{ gunicorn_user }}"
    group: "{{ gunicorn_group }}"
    mode: "0774"
    state: directory

- name: Check if application log file exists
  ansible.builtin.stat:
    path: "{{ application_log_file }}"
  register: app_log

- name: Create the application log file
  ansible.builtin.file:
    path: "{{ application_log_file }}"
    owner: "{{ gunicorn_user }}"
    group: "{{ gunicorn_group }}"
    mode: "0664"
    state: touch
  when: "not app_log.stat.exists"

- name: Create the gunicorn/uvicorn script file
  ansible.builtin.template:
    src: "{{ item }}_start.j2"
    dest: "{{ virtualenv_path }}/bin/{{ item }}_start"
    owner: "{{ gunicorn_user }}"
    group: "{{ gunicorn_group }}"
    mode: "0755"
    backup: true
  with_items:
    - gunicorn
    - uvicorn
  notify: restart app server
  tags:
    - deploy
    - deploy-backend
    - deploy-web

- name: Create the CMS gunicorn script file
  ansible.builtin.template:
    src: "gunicorn_cmssite_start.j2"
    dest: "{{ virtualenv_path }}/bin/gunicorn_{{ item.key }}_start"
    owner: "{{ gunicorn_user }}"
    group: "{{ gunicorn_group }}"
    mode: "0755"
    backup: true
  with_items: "{{ cms_sites }}"
  notify: restart CMS app server
  tags:
    - deploy
    - deploy-backend
    - deploy-web
