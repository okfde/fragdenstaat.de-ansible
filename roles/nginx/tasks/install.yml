---

- name: Install Nginx
  ansible.builtin.apt:
    name: nginx
    update_cache: "{{ update_apt_cache }}"
    state: present
  tags: packages
  retries: 3
  delay: 10

- name: Ensure that a strong Diffie-Hellman group is used
  ansible.builtin.command:
    cmd: "openssl dhparam -dsaparam -out /etc/ssl/certs/dhparams.pem 4096"
    creates: "/etc/ssl/certs/dhparams.pem"
  when: nginx_strong_dh_group is defined and nginx_strong_dh_group

- name: Overwrite the nginx.conf file
  ansible.builtin.template:
    src: nginx.conf.j2
    dest: /etc/nginx/nginx.conf
    mode: "0644"
    backup: true
  notify: reload nginx
  tags:
    - nginx

- name: Add or modify nofile soft limit for the user
  community.general.pam_limits:
    domain: www-data
    limit_type: "{{ item.limit_type }}"
    limit_item: "{{ item.limit_item }}"
    value: "{{ item.value }}"
  with_items:
    - limit_type: "soft"
      limit_item: "nofile"
      value: 65535
    - limit_type: "hard"
      limit_item: "nofile"
      value: 65535
  register: nginx_pam_limits

- name: reload settings from all system configuration files
  ansible.builtin.command:
    cmd: "sysctl --system"
  when: nginx_pam_limits is changed
  tags:
    - skip_ansible_lint

- name: Ensure that the default site is disabled
  ansible.builtin.file:
    path: /etc/nginx/sites-enabled/default
    state: absent
  notify: reload nginx

- name: Ensure Nginx service is started
  ansible.builtin.service:
    name: nginx
    state: started
    enabled: true
  tags:
    - nginx
  ignore_errors: true

- name: configure http, https ports in firewall
  community.general.ufw:
    rule: allow
    port: "{{ item }}"
    proto: tcp
  with_items:
    - http
    - https
