- name: Setup Sentry Git repo
  ansible.builtin.git:
    repo: "{{ sentry_git_repo }}"
    dest: "{{ sentry_dir }}"
    update: true
  become: true
  register: sentry_updated

- name: Start sentry service
  ansible.builtin.systemd:
    name: stopped
    state: started
  when: sentry_updated.changed
  tags:
    - skip_ansible_lint

- name: "Install sentry"
  ansible.builtin.command:
    cmd: "./install.sh --skip-user-creation --no-report-self-hosted-issues"
    chdir: "{{ sentry_dir }}"
  when: sentry_updated.changed
  tags:
    - skip_ansible_lint

- name: Set sentry config options
  ansible.builtin.lineinfile:
    path: "{{ sentry_dir }}/sentry/config.yml"
    regex: "^(#)?{{ item.key }}"
    line: "{{ item.key }}: {{ item.value | replace('\n', '\\n') }}"
    state: present
  loop:
    - "{ key: \"github-app.id\", value: '{{ sentry_github_app_id }}' }"
    - "{ key: \"github-app.name\", value: '\"{{ sentry_github_app_name }}\"' }"
    - "{ key: \"github-app.webhook-secret\", value: '\"{{ sentry_github_app_webhook_secret }}\"' }"
    - "{ key: \"github-app.client-id\", value: '\"{{ sentry_github_app_client_id }}\"' }"
    - "{ key: \"github-app.client-secret\", value: '\"{{ sentry_github_app_client_secret }}\"' }"
    - "{ key: \"github-app.private-key\", value: '\"{{ sentry_github_app_private_key }}\"' }"
    - "{ key: \"slack.client-id\", value: '\"{{ sentry_slack_client_id }}\"' }"
    - "{ key: \"slack.client-secret\", value: '\"{{ sentry_slack_client_secret }}\"' }"
    - "{ key: \"slack.signing-secret\", value: '\"{{ sentry_slack_signing_secret }}\"' }"
    - "{ key: \"mail.host\", value: '\"{{ sentry_mail_host }}\"' }"
    - "{ key: \"mail.port\", value: '{{ sentry_mail_port }}' }"
    - "{ key: \"mail.username\", value: '\"{{ sentry_mail_username }}\"' }"
    - "{ key: \"mail.password\", value: '\"{{ sentry_mail_password }}\"' }"
    - "{ key: \"mail.use-tls\", value: \"true\" }"
    - "{ key: \"mail.from\", value: '\"{{ sentry_mail_from }}\"' }"

- name: Disable Sentry Beacon
  ansible.builtin.lineinfile:
    path: "{{ sentry_dir }}/sentry/sentry.conf.py"
    regex: "^(#)? ?{{ item.key }} ="
    line: "{{ item.key }} = {{ item.value }}"
    state: present
  loop:
    - "{ key: \"SENTRY_BEACON\", value: \"False\" }"
    - "{ key: \"SECURE_PROXY_SSL_HEADER\", value: \"('HTTP_X_FORWARDED_PROTO', 'https')\" }"
    - "{ key: \"SESSION_COOKIE_SECURE\", value: \"True\" }"
    - "{ key: \"CSRF_COOKIE_SECURE\", value: \"True\" }"
    - "{ key: \"SOCIAL_AUTH_REDIRECT_IS_HTTPS\", value: \"True\" }"

- name: Copy Sentry .env to .env.custom
  ansible.builtin.copy:
    src: "{{ sentry_dir }}/.env"
    remote_src: true
    dest: "{{ sentry_dir }}/.env.custom"
    mode: "0644"

- name: Customize sentry env vars
  ansible.builtin.lineinfile:
    path: "{{ sentry_dir }}/.env.custom"
    line: "{{ item }}"
  loop:
    - "SENTRY_MAIL_HOST={{ sentry_domain }}"
    - "SENTRY_EVENT_RETENTION_DAYS=90"
    - "SENTRY_BIND=127.0.0.1:9000"

- name: Add GeoIP configuration
  ansible.builtin.template:
    src: geoip.conf.j2
    dest: "{{ sentry_dir }}/geoip/GeoIP.conf"
    mode: "0644"

- name: Set sentry systemd service
  ansible.builtin.template:
    src: sentry.service.j2
    dest: /etc/systemd/system/sentry.service
    mode: "0444"

- name: Start sentry service
  ansible.builtin.systemd:
    name: sentry
    state: started

- name: Create the Nginx site configuration
  ansible.builtin.template:
    src: nginx-site.j2
    dest: "/etc/nginx/sites-available/{{ sentry_domain }}"
    mode: "0644"
    backup: true
  notify: reload nginx

- name: Ensure that the application site is enabled
  ansible.builtin.file:
    src: "/etc/nginx/sites-available/{{ sentry_domain }}"
    dest: "/etc/nginx/sites-enabled/{{ sentry_domain }}"
    state: link
  notify: reload nginx

- import_tasks: setup_backup.yml
