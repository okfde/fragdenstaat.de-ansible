- name: Install rspamd
  ansible.builtin.apt:
    pkg: rspamd

- name: Create directory for DKIM keys
  ansible.builtin.file:
    state: directory
    path: /var/lib/rspamd/dkim/
    owner: _rspamd
    group: _rspamd
    mode: "0750"
  failed_when: false

- name: Generate DKIM private keys
  ansible.builtin.command:
    cmd: "rspamadm dkim_keygen -s '{{ item.selector }}' -d {{ item.name }} -b {{ item.keysize }} -k /var/lib/rspamd/dkim/{{ item.name }}.{{ item.selector }}.key"
    creates: /var/lib/rspamd/dkim/{{ item.name }}.{{ item.selector }}.key
  with_items: "{{ dkim_domains }}"
  register: dkim_keygen

- name: Save DKIM public keys
  ansible.builtin.copy:
    content: "{{ item.stdout }}"
    dest: /var/lib/rspamd/dkim/{{ item.cmd[5] }}.{{ item.cmd[3] }}.key.pub
    mode: "0644"
  with_items: "{{ dkim_keygen.results }}"
  when:
    - item.changed
  tags:
    - skip_ansible_lint

- name: Get DKIM key filenames
  ansible.builtin.find:
    paths: "/var/lib/rspamd/dkim/"
  register: dkim_keys

- name: Set permissions for DKIM keys
  ansible.builtin.file:
    path: "{{ item.path }}"
    owner: _rspamd
    group: _rspamd
    mode: "0640"
  with_items: "{{ dkim_keys.files }}"
  failed_when: false

- name: Check if worker-controller config exists
  ansible.builtin.stat:
    path: /etc/rspamd/local.d/worker-controller.inc
  when: "'controller' in rspamd_worker"
  register: worker_controller_config

- name: Generate password for worker-controller
  ansible.builtin.set_fact:
    rspamd_controller_password: "{{ lookup('password', '/dev/null length=16') }}"
  when: "'controller' in rspamd_worker and not worker_controller_config.stat.exists"

- name: Convert password for worker-controller
  ansible.builtin.command:
    cmd: "rspamadm pw -p \"{{ rspamd_controller_password }}\" 2>/dev/null"
  register: controller_passwd
  when: "'controller' in rspamd_worker and not worker_controller_config.stat.exists"
  changed_when: false

- name: Get worker-controller config
  ansible.builtin.slurp:
    path: /etc/rspamd/local.d/worker-controller.inc
  register: slurpfile
  when: "'controller' in rspamd_worker and worker_controller_config.stat.exists"

- name: Configure rspamd modules
  ansible.builtin.template:
    src: rspamd/{{ item }}.conf.j2
    dest: /etc/rspamd/local.d/{{ item }}.conf
    mode: "0644"
  with_items: "{{ rspamd_modules }}"
  notify: Restart rspamd

- name: Configure worker
  ansible.builtin.template:
    src: rspamd/worker-{{ item }}.inc.j2
    dest: /etc/rspamd/local.d/worker-{{ item }}.inc
    mode: "0644"
  with_items: "{{ rspamd_worker }}"
  notify: Restart rspamd

- name: Check if nginx directory exists
  ansible.builtin.stat:
    path: /etc/nginx/sites-enabled/
  register: nginx_config_dir

- name: Configure nginx
  ansible.builtin.template:
    src: rspamd/nginx.conf.j2
    dest: /etc/nginx/sites-enabled/rspamd.conf
    mode: "0640"
  notify: Reload nginx
  when: "rspamd_url is defined and rspamd_url is not false and nginx_config_dir.stat.exists"

- name: Print password for worker-controller
  ansible.builtin.debug:
    msg: "{{ rspamd_controller_password }}"
  when: rspamd_controller_password is defined
