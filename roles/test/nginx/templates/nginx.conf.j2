user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
	worker_connections 768;
	# multi_accept on;
}

http {

	map $http_upgrade $connection_upgrade {
		default upgrade;
		''      close;
	}

{% for header, value in nginx_headers.items() %}
    map $http_{{ header.replace('-','_').lower() }} ${{ header.replace('-','_').lower() }} {
        default "{{ value }}";
        "" "";
    }

    add_header {{ header }} ${{ header.replace('-','_').lower() }} always;
{% endfor %}

	sendfile on;
	tcp_nopush on;
	types_hash_max_size 2048;

	client_max_body_size {{ nginx_client_max_body_size }};
	server_tokens {{ nginx_server_tokens }};
	gzip {{ nginx_gzip }};

	ssl_certificate {{ nginx_ssl_default_cert }};
	ssl_certificate_key {{ nginx_ssl_default_cert_key }};
	ssl_trusted_certificate {{ nginx_ssl_default_trusted_cert}};

	ssl_session_timeout {{ nginx_ssl_session_timeout }};
	ssl_session_cache {{ nginx_ssl_session_cache }};
	ssl_session_tickets {{ nginx_ssl_session_tickets }};
	ssl_dhparam {{ nginx_dhparam }};

	ssl_protocols {{ nginx_tls_protocols }};
	ssl_ciphers {{ nginx_ciphers }};
	ssl_prefer_server_ciphers {{ nginx_prefer_server_ciphers }};

	ssl_stapling off;
	ssl_stapling_verify off;
	resolver {{ nginx_resolver }};

	proxy_cache_path {{ nginx_proxy_path }};
	proxy_redirect {{ nginx_proxy_redirect }};
	proxy_intercept_errors {{ nginx_proxy_intercept_errors }};
	proxy_read_timeout {{ nginx_proxy_read_timeout }};
	proxy_ignore_client_abort {{ nginx_proxy_ignore_client_abort }};
	proxy_connect_timeout {{ nginx_proxy_connect_timeout }};

	proxy_buffer_size {{ nginx_proxy_buffer_size }};
	proxy_buffers {{ nginx_proxy_buffers }};
	proxy_busy_buffers_size {{ nginx_proxy_busy_buffers_size }};

	proxy_headers_hash_max_size {{ nginx_proxy_headers_hash_max_size }};
	proxy_buffering {{ nginx_proxy_buffering }};
	proxy_cache_bypass {{ nginx_proxy_cache_bypass }};

{% for header in nginx_proxy_headers %}
	proxy_set_header {{ header }};
{% endfor %}

	set_real_ip_from {{ nginx_set_real_ip_from }};
	real_ip_header {{ nginx_real_ip_header }};

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;

	include /etc/nginx/conf.d/*.conf;
	include /etc/nginx/sites-enabled/*;
}

stream {
    server {
        listen     25;
        proxy_pass 192.168.122.123:25;
    }
    # server {
    #     listen     465;
    #     proxy_pass 192.168.122.123:465;
    # }
    # server {
    #     listen     587;
    #     proxy_pass 192.168.122.123:587;
    # }
}
