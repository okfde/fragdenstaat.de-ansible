---

- name: Install WireGuard and other requirements
  apt:
    name:
      - wireguard
    state: present
    update_cache: true

- name: Enable IPv4 traffic forwarding
  sysctl:
    name: net.ipv4.ip_forward
    value: 1
    sysctl_set: true
    state: present
    reload: true

- name: Enable IPv4 forwarding continued
  command: echo 1 > /proc/sys/net/ipv4/ip_forward

- name: Check if wg0-server.conf already exists
  stat:
    path: /etc/wireguard/wg0.conf
  register: wg0_conf

- name: mkdir -p /etc/wireguard/keys
  file:
    path: /etc/wireguard/keys
    state: directory
  when: wg0_conf is not defined or wg0_conf.stat.exists == false

- name: Generate private and public keys for the server
  shell: umask 077; wg genkey | tee privatekey | wg pubkey > server.public
  args:
    chdir: /etc/wireguard/keys
  register: key_files
  when: wg0_conf is not defined or wg0_conf.stat.exists == false

- name: cat privatekey => var_privatekey
  shell: cat privatekey
  register: var_privatekey
  args:
    chdir: /etc/wireguard/keys

- name: cat server.public => var_publickey
  shell: cat server.public
  register: var_publickey
  args:
    chdir: /etc/wireguard/keys

- name: Add vars vpn client
  include_vars: ../env_vars/vpnclients.yml

- name: Generate server config
  template:
    src: "templates/server.conf.j2"
    dest: "/etc/wireguard/wg0.conf"
    owner: root
    group: root
    mode: 0600
  notify:
    - restart wireguard

- name: Print server public key
  debug:
    var: var_publickey

- name: Enable wireguard interface
  systemd:
    name: wg-quick@wg0
    enabled: true
    state: started

- name: Allow wireguard
  community.general.ufw:
    rule: allow
    port: "{{ vpn_port }}"
    proto: udp
