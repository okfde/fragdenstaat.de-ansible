---

- name: Install WireGuard and other requirements
  ansible.builtin.apt:
    name:
      - wireguard
    state: present
    update_cache: true

- name: Enable IPv4 traffic forwarding
  ansible.builtin.sysctl:
    name: net.ipv4.ip_forward
    value: "1"
    sysctl_set: true
    state: present
    reload: true

- name: Enable IPv4 forwarding continued
  ansible.builtin.command:
    cmd: echo 1 > /proc/sys/net/ipv4/ip_forward
  changed_when: false

- name: Check if wg0-server.conf already exists
  ansible.builtin.stat:
    path: /etc/wireguard/wg0.conf
  register: wg0_conf

- name: mkdir -p /etc/wireguard/keys
  ansible.builtin.file:
    path: /etc/wireguard/keys
    state: directory
    mode: "0755"
  when: wg0_conf is not defined or not wg0_conf.stat.exists

- name: Generate private and public keys for the server
  ansible.builtin.shell: |
    set -o pipefail
    umask 077
    wg genkey | tee privatekey | wg pubkey > server.public
  args:
    chdir: /etc/wireguard/keys
  register: key_files
  when: wg0_conf is not defined or not wg0_conf.stat.exists

- name: cat privatekey => var_privatekey
  ansible.builtin.command:
    cmd: "cat privatekey"
  register: var_privatekey
  args:
    chdir: /etc/wireguard/keys
  changed_when: false

- name: cat server.public => var_publickey
  ansible.builtin.command:
    cmd: "cat server.public"
  register: var_publickey
  args:
    chdir: /etc/wireguard/keys
  changed_when: false

- name: Add vars vpn client
  include_vars: ../env_vars/vpnclients.yml

- name: Generate server config
  ansible.builtin.template:
    src: "templates/server.conf.j2"
    dest: "/etc/wireguard/wg0.conf"
    owner: root
    group: root
    mode: "0600"
  when: "'stdout' in var_privatekey"
  notify:
    - restart wireguard

- name: Print server public key
  ansible.builtin.debug:
    var: var_publickey

- name: Enable wireguard interface
  ansible.builtin.systemd:
    name: wg-quick@wg0
    enabled: true
    state: started

- name: Allow wireguard
  community.general.ufw:
    rule: allow
    port: "{{ vpn_port }}"
    proto: udp
