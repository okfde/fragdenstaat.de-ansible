#!/bin/bash
#
# check_socks - Monitor a socks5 proxy
# Copyright (c) 2019 Ekhozie (ekhozie@users.noreply.github.com)
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

HELP=false
IP='127.0.0.1'
PORT='9050'
TARGET='cejukxlcaj4umxbtwj3xknyrgr5utkigwvfnymcyvfmh3wlhkec257ad'
MAX_TIME=10

OPTS=`getopt -o hi:p: --long max-time:,target:,help -n 'check_socks' -- "$@"`

if [[ $? != 0 ]] ; then
    echo "UNKNOWN - Failed parsing options."
    exit 3
fi

eval set -- "$OPTS"

while true; do
  case "$1" in
    -i ) IP="$2"; shift; shift ;;
    -p ) PORT="$2"; shift; shift ;;
    --target ) TARGET="$2"; shift; shift ;;
    --max-time ) MAX_TIME="$2"; shift; shift ;;
    -h | --help )    HELP=true; shift ;;
    -- ) shift; break ;;
    * ) break ;;
  esac
done

if [[ $HELP == 'true' ]] ; then
    cat <<EOF
check_tor - Monitor tor services via tor socks5h proxy.
based on check_socks Ekhozie (ekhozie@users.noreply.github.com)
Copyright (c) 2025 FragDenStaat <denis.witt@okfn.de>
Usage:
    --help     = Print this message
    -i         = Proxy IP address (default: ${IP})
    -p         = Proxy port (default: ${PORT})
    --target   = Url to check socks proxy (default: ${TARGET})
    --max-time = Maximum time in seconds that you allow the whole operation to take (default: ${MAX_TIME})
EOF
    exit 0
elif [[ -z $IP || -z $PORT || -z $TARGET ]] ; then
    echo 'UNKNOWN - Missing required parameter(s).'
    exit 3
fi

TARGET="http://${TARGET}.onion"
ts=$(date +%s%N)
curl --max-time "${MAX_TIME}" -sf --socks5-hostname "${IP}:${PORT}" "${TARGET}" &>/dev/null
ret=$?
tt=$((($(date +%s%N) - $ts)/1000000))

if [[ $ret -eq 0 ]] ; then
    echo "OK - ${TARGET} is reachable, curl returns $ret after ${tt}ms."
    exit 0
else
    echo "CRITICAL - ${TARGET} is not reachable, curl returns $ret after ${tt}ms."
    exit 1
fi
