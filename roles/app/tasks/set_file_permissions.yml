---

- name: Ensure that the application file permissions are set properly
  ansible.builtin.file:
    path: "{{ virtualenv_path }}/{{ item }}"
    recurse: true
    owner: "{{ gunicorn_user }}"
    group: "{{ gunicorn_group }}"
    state: directory
  with_items:
    - bin
    - include
    - data
    - lib
    - scripts
    - share
    - run
    - meta

- name: Creates public directory
  ansible.builtin.file:
    path: "{{ virtualenv_path }}/public"
    state: "directory"
    owner: "{{ gunicorn_user }}"
    mode: "0755"

- name: Creates storage directory
  ansible.builtin.file:
    path: "{{ virtualenv_path }}/storage"
    state: directory
    owner: "{{ gunicorn_user }}"
    mode: "02750"
  when: not external_media_storage

- name: Creates storage sub-directory
  ansible.builtin.file:
    path: "{{ virtualenv_path }}/storage/files"
    state: "directory"
    owner: "{{ gunicorn_user }}"
    mode: "02750"
  when: not external_media_storage

- name: Symlink storage directory
  ansible.builtin.file:
    src: "{{ external_media_storage_target }}"
    dest: "{{ virtualenv_path }}/storage"
    state: link
    owner: "{{ gunicorn_user }}"
    group: "www-data"
  when: external_media_storage
  ignore_errors: true
  become: true
  tags:
    - storageaccess
    - skip_ansible_lint

- name: Ensure that the storage directory permissions are set properly
  # leading 2 on mode sets group id (setgid), so other files will get group www-data
  ansible.builtin.command: "find {{ virtualenv_path }}/storage -type d -exec chmod 2750 {} \\;"
  changed_when: false
  tags:
    - storageaccess

- name: Ensure that the storage directory owners are set properly
  ansible.builtin.command: "find {{ virtualenv_path }}/storage -type d -exec chown {{ gunicorn_user }} {} \\;"
  changed_when: false
  tags:
    - storageaccess

- name: Ensure that the storage directory groups are set properly
  ansible.builtin.command: "find {{ virtualenv_path }}/storage -type d -exec chgrp www-data {} \\;"
  changed_when: false
  tags:
    - storageaccess
